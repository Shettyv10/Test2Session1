 
 gcc -g p1original.c -lm
 ./a.out
enter the values of x1,x2,y1,y2
4
2
5
1
the distance between x1=4.000000 y1=5.000000 x2=2.000000 and y2=1.000000 is 4.472136
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main 
Breakpoint 1 at 0x8f0: file p1original.c, line 18.
(gdb) r
Starting program: /home/runner/Test2Session1/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p1original.c:18
18  {
(gdb) n
20    input (&x1,&x2,&y1,&y2);
(gdb) s
input (x1=0x7ffd5c0b6604, y1=0x7ffd5c0b6608, x2=0x7ffd5c0b660c, 
    y2=0x7ffd5c0b6610) at p1original.c:5
5     printf("enter the values of x1,x2,y1,y2\n");
(gdb) n
enter the values of x1,x2,y1,y2
6     scanf("%f %f %f %f",x1,x2,y1,y2);
(gdb) n
4
2
5
1
7   }
(gdb) n
main () at p1original.c:21
21    find_distance(x1,x2,y1,y2,&area);
(gdb) s
find_distance (x1=4, y1=5, x2=2, y2=1, area=0x7ffd5c0b6614)
    at p1original.c:10
10    *area=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));
(gdb) n
11  }
(gdb) n
main () at p1original.c:22
22    output(x1,x2,y1,y2,area);
(gdb) s
output (x1=4, y1=5, x2=2, y2=1, area=4.47213602) at p1original.c:14
14    printf("the distance between x1=%f y1=%f x2=%f and y2=%f is %f\n",x1,y1,x2,y2,area);
(gdb) n
the distance between x1=4.000000 y1=5.000000 x2=2.000000 and y2=1.000000 is 4.472136
16  }
(gdb) n
main () at p1original.c:23
23    return 0;
(gdb) n
24  }(gdb) q
A debugging session is active.

    Inferior 1 [process 104] will be killed.

Quit anyway? (y or n) y





